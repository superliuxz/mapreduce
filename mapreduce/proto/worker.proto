syntax = "proto3";

import "google/protobuf/empty.proto";

package mr.proto;

service Worker {
  // Worker as the server, receives RPC request from the Master, allowing Master
  // to set the worker_id, task, and execute Map and Reduce.
  rpc SetWorkerId (SetWorkerIdRequest) returns (google.protobuf.Empty) {}
  rpc SetTask (SetTaskRequest) returns (google.protobuf.Empty) {}
  rpc Map(MapRequest) returns (MapReply) {}
  rpc Reduce(ReduceRequest) returns (ReduceReply) {}
}

message SetWorkerIdRequest {
  uint32 worker_id = 1;
}

message SetTaskRequest {
  message Task {
    uint32 num_workers = 1;
    repeated string workers = 2; // IP address.
    string work_directory = 3;
    string input_name = 4;  // <work_dir>/<input_name>
  }
  Task task = 1; // The serialized mr::Task class.
}

message MapRequest {
  string key = 1;
  string value = 2;
}

message MapReply {
  uint32 worker_id = 1;
  bool stage_success = 2;
  uint64 elapsed_time = 3;
  string message = 4;
}

message ReduceRequest {
  string key = 1;
  string value = 2;
}

message ReduceReply {
  uint32 worker_id = 1;
  bool stage_success = 2;
  uint64 elapsed_time = 3;
  string message = 4;
}